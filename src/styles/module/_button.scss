// Buttons
// ----------------------------------------------

/*doc
---
title: Button
name: Button
category: Module
---

Button styles can be applied to any element. Typically you'll want to
use either a `<button>` or an `<a>` element:

```html_example
<button class="button">Simple button</button>
<a class="button" href="http://wearecube.ch">Link with .button class</a>
<a class="button is-primary">Primary button</a>
<a class="button is-disabled">Disabled button</a>
```

Three sizes for the buttons: small, medium (default) and big.

```html_example
<a class="button is-small">Small</a>
<a class="button">Medium</a>
<a class="button is-big">Big</a>
```
*/

.button,
button.button,
a.button {
  display: inline-block;
  padding: rem-calc(24 48);
  background-color: #eee;
  border: none;

  font-size: rem-calc(18);
  color: #FFFFFF;
  line-height: rem-calc(24);
  white-space: nowrap;
  vertical-align: middle;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
  transition: all 300ms ease-in-out;
  -webkit-appearance: none;

  &:focus,
  &:focus:hover,
  &:hover,
  &:active {
    background-color: #f5f5f5;
  }

  &.is-cta {
    position: relative;
    overflow: hidden;
    background-image: linear-gradient(-180deg, #EA5F51 0%, #E54A4A 100%);
    border: none;
    border-radius: 3px;
    text-transform: uppercase;
    margin-top: rem-calc(48);
    transition: all 300ms ease-in-out;

    @include susy-breakpoint($break-large) {
      margin-top: rem-calc(60);
    }
    & > span {
      display: inline-block;
    	width: 100%;
    	height: 100%;
      transition: all 300ms ease-in-out;
    }
    &:hover > span,
    &:focus > span {
      transform: translateY(200%);
    }
    & > .icon {
      position: absolute;
      top: -100%;
      left: 50%;
      margin-left: -18px;
      transition: all 300ms ease-in-out;
    }
    &:hover > .icon,
    &:focus > .icon {
      top: 50%;
      margin-top: -12px;
    }
  }
}
